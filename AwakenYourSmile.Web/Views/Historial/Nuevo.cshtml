@using AwakenYourSmile.Web.Models;
@using System.Globalization;
@model AwakenYourSmile.ClinicalHistory
@{
    ViewBag.Title = "Crea un nuevo historial clínico.";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section AddToHead{
    <link href="@Url.Content("~/css/datepicker.css")" rel="stylesheet" type="text/css" />
}

<section class="container page-content">
    <hr class="vertical-space2">
    <div class="sixteen columns">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.CreatedBy)
            @Html.HiddenFor(model => model.DateCreated)
            <div class="one_third">
                <h6>Nombre:</h6>
                @Html.TextBoxFor(model => model.Name, new { placeholder = "Nombre" })
                @Html.ValidationMessageFor(model => model.Name)
                <h6>Diminutivo:</h6>
                @Html.TextBoxFor(model => model.NickName, new { placeholder = "Diminutivo" })
                @Html.ValidationMessageFor(model => model.NickName)
                <h6>Edad:</h6>
                @Html.TextBoxFor(model => model.Age, new { placeholder = "Edad" })
                @Html.ValidationMessageFor(model => model.Age)
                <h6>Sexo:</h6>
                @Html.DropDownListFor(m => m.Gender, ClinicalHistoryModelHelper.Genders, "Seleccione")
                @Html.ValidationMessageFor(model => model.Gender)
                <h6>Fecha de nacimiento:</h6>
                @Html.TextBoxFor(model => model.BirthDate, String.Format("{0:dd-MM-yyyy}", Model.BirthDate), new { placeholder = "Cumpleaños" })
                <h6>Domicilio:</h6>
                @Html.TextBoxFor(model => model.Address, new { placeholder = "Domicilio" })
                @Html.ValidationMessageFor(model => model.Address)
                <h6>Colonia:</h6>
                @Html.TextBoxFor(model => model.Address2, new { placeholder = "Colonia" })
                @Html.ValidationMessageFor(model => model.Address2)
                <h6>Ciudad:</h6>
                @Html.TextBoxFor(model => model.CityState, new { placeholder = "Ciudad" })
                @Html.ValidationMessageFor(model => model.CityState)
                <h6>Teléfono:</h6>
                @Html.TextBoxFor(model => model.PhoneNumber, new { placeholder = "Teléfono" })
                @Html.ValidationMessageFor(model => model.PhoneNumber)
                <h6>Escuela:</h6>
                @Html.TextBoxFor(model => model.School, new { placeholder = "Escuela" })
                @Html.ValidationMessageFor(model => model.School)

                <h3>Papás</h3>
                <h6>Nombre del papá:</h6>
                @Html.TextBoxFor(model => model.FatherName, new { placeholder = "Nombre" })
                @Html.ValidationMessageFor(model => model.FatherName)
                <h6>Teléfono:</h6>
                @Html.TextBoxFor(model => model.FatherPhoneNumber, new { placeholder = "Teléfono" })
                @Html.ValidationMessageFor(model => model.FatherPhoneNumber)
                <h6>Ocupación:</h6>
                @Html.TextBoxFor(model => model.FatherOccupation, new { placeholder = "Ocupación" })
                @Html.ValidationMessageFor(model => model.FatherOccupation)
                <h6>Email:</h6>
                @Html.TextBoxFor(model => model.FatherEmail, new { placeholder = "Email" })
                @Html.ValidationMessageFor(model => model.FatherEmail)
                <h6>Nombre de la mamá:</h6>
                @Html.TextBoxFor(model => model.MotherName, new { placeholder = "Nombre" })
                @Html.ValidationMessageFor(model => model.MotherName)
                <h6>Teléfono:</h6>
                @Html.TextBoxFor(model => model.MotherPhoneNumber, new { placeholder = "Teléfono" })
                @Html.ValidationMessageFor(model => model.MotherPhoneNumber)
                <h6>Ocupación:</h6>
                @Html.TextBoxFor(model => model.MotherOccupation, new { placeholder = "Ocupación" })
                @Html.ValidationMessageFor(model => model.MotherOccupation)
                <h6>Email:</h6>
                @Html.TextBoxFor(model => model.MotherEmail, new { placeholder = "Email" })
                @Html.ValidationMessageFor(model => model.MotherEmail)

                <h3>Motivo de la consulta</h3>
                @Html.DropDownListFor(m => m.ReasonForVisit, ClinicalHistoryModelHelper.ReasonForVisit, "Seleccione")
                @Html.ValidationMessageFor(model => model.ReasonForVisit)
                <h6>Otro:</h6>
                @Html.TextBoxFor(model => model.ReasonOther, new { placeholder = "Otro" })
                @Html.ValidationMessageFor(model => model.ReasonOther)
                <h6>Recomendado por:</h6>
                @Html.TextBoxFor(model => model.RecommendedBy, new { placeholder = "Nombre" })
                @Html.ValidationMessageFor(model => model.RecommendedBy)
                <div class="spanMessage"></div>
            </div>
            <div class="one_third">
                <h3>Historia clínica</h3>
                <p>Eliga la respuesta o explíquela claramente ya que es importante su sinceridad para el correcto diagnóstico y atención de su hijo (a).</p>
                <br>      <h3>Odontopediatría</h3>
                <h6>¿Has asistido al odontólogo anteriormente?</h6>
                <label>
                    Si
                    @Html.RadioButtonFor(m => m.FirstVisit, true, Model.FirstVisit ? new { @checked = true } : null)
                    No
                    @Html.RadioButtonFor(m => m.FirstVisit, false, !Model.FirstVisit ? new { @checked = true } : null)
                </label><br>
                <h6>¿Por qué?</h6>
                @Html.TextBoxFor(model => model.FirstVisitReason, new { placeholder = "Otro" })
                @Html.ValidationMessageFor(model => model.FirstVisitReason)

                <br> <h6>La experiencia el tratamiento fue:</h6>
                <label>
                    Buena
                    @Html.RadioButtonFor(m => m.PreviousVisitExperience, AwakenYourSmile.Grade.Good, Model.PreviousVisitExperience == AwakenYourSmile.Grade.Good ? new { @checked = true } : null)
                    Mala
                    @Html.RadioButtonFor(m => m.PreviousVisitExperience, AwakenYourSmile.Grade.Bad, Model.PreviousVisitExperience == AwakenYourSmile.Grade.Bad ? new { @checked = true } : null)
                </label>

                <br> <h6>¿Cómo piensa que reaccionó el niño en visitas médicas anteriores?</h6>
                <label>
                    Buena
                    @Html.RadioButtonFor(m => m.ReactionToPreviousVisits, AwakenYourSmile.Grade.Good, Model.ReactionToPreviousVisits == AwakenYourSmile.Grade.Good ? new { @checked = true } : null)
                    Regular
                    @Html.RadioButtonFor(m => m.ReactionToPreviousVisits, AwakenYourSmile.Grade.Regular, Model.ReactionToPreviousVisits == AwakenYourSmile.Grade.Regular ? new { @checked = true } : null)
                    Mala
                    @Html.RadioButtonFor(m => m.ReactionToPreviousVisits, AwakenYourSmile.Grade.Bad, Model.ReactionToPreviousVisits == AwakenYourSmile.Grade.Bad ? new { @checked = true } : null)
                </label>

                <br><h6>¿Cómo calificaría su grado de ansiedad en este momento?</h6>
                <label>
                    Buena
                    @Html.RadioButtonFor(m => m.AnxietyGrade, AwakenYourSmile.Grade.Good, Model.AnxietyGrade == AwakenYourSmile.Grade.Good ? new { @checked = true } : null)
                    Regular
                    @Html.RadioButtonFor(m => m.AnxietyGrade, AwakenYourSmile.Grade.Regular, Model.AnxietyGrade == AwakenYourSmile.Grade.Regular ? new { @checked = true } : null)
                    Mala
                    @Html.RadioButtonFor(m => m.AnxietyGrade, AwakenYourSmile.Grade.Bad, Model.AnxietyGrade == AwakenYourSmile.Grade.Bad ? new { @checked = true } : null)
                </label>

                <br> <h6>¿Cómo piensa que reaccione el niño en el sillón dental?</h6>
                <label>
                    Buena
                    @Html.RadioButtonFor(m => m.ExpectedReactionGrade, AwakenYourSmile.Grade.Good, Model.ExpectedReactionGrade == AwakenYourSmile.Grade.Good ? new { @checked = true } : null)
                    Regular
                    @Html.RadioButtonFor(m => m.ExpectedReactionGrade, AwakenYourSmile.Grade.Regular, Model.ExpectedReactionGrade == AwakenYourSmile.Grade.Regular ? new { @checked = true } : null)
                    Mala
                    @Html.RadioButtonFor(m => m.ExpectedReactionGrade, AwakenYourSmile.Grade.Bad, Model.ExpectedReactionGrade == AwakenYourSmile.Grade.Bad ? new { @checked = true } : null)
                </label>

                <br><h6>¿Cómo es el rendimiento escolar del niño?</h6>
                <label>
                    Buena
                    @Html.RadioButtonFor(m => m.PerformanceAtSchool, AwakenYourSmile.Grade.Good, Model.PerformanceAtSchool == AwakenYourSmile.Grade.Good ? new { @checked = true } : null)
                    Regular
                    @Html.RadioButtonFor(m => m.PerformanceAtSchool, AwakenYourSmile.Grade.Regular, Model.PerformanceAtSchool == AwakenYourSmile.Grade.Regular ? new { @checked = true } : null)
                    Mala
                    @Html.RadioButtonFor(m => m.PerformanceAtSchool, AwakenYourSmile.Grade.Bad, Model.PerformanceAtSchool == AwakenYourSmile.Grade.Bad ? new { @checked = true } : null)
                </label>

                <br><h6>¿Cómo motiva al niño?</h6>
                @Html.TextBoxFor(model => model.Motivation, new { placeholder = "motivación" })
                @Html.ValidationMessageFor(model => model.Motivation)

                <h6>¿Se usó anestesia local anteriormente?</h6>
                <label>
                    Si
                    @Html.RadioButtonFor(m => m.HasBeenAnesthetized, true, Model.HasBeenAnesthetized ? new { @checked = true } : null)
                    No
                    @Html.RadioButtonFor(m => m.HasBeenAnesthetized, false, !Model.HasBeenAnesthetized ? new { @checked = true } : null)
                </label>

                <br><h6>¿Tuvo una reacción adversa?</h6>
                <label>
                    Si
                    @Html.RadioButtonFor(m => m.AdverseReactionToAnesthesia, true, Model.AdverseReactionToAnesthesia ? new { @checked = true } : null)
                    No
                    @Html.RadioButtonFor(m => m.AdverseReactionToAnesthesia, false, !Model.AdverseReactionToAnesthesia ? new { @checked = true } : null)
                </label>

                <br><h6>¿Cuál?</h6>
                @Html.TextBoxFor(model => model.ReactionToAnesthesia, new { placeholder = "reacción" })
                @Html.ValidationMessageFor(model => model.ReactionToAnesthesia)

                <h6>¿Su hijo se cepilla los dientes solo?</h6>
                <label>
                    Si
                    @Html.RadioButtonFor(m => m.SelfCleaningTooth, true, Model.SelfCleaningTooth ? new { @checked = true } : null)
                    No
                    @Html.RadioButtonFor(m => m.SelfCleaningTooth, false, !Model.SelfCleaningTooth ? new { @checked = true } : null)
                </label>

                <br><h6>¿Cuántas veces al día?</h6>
                @Html.TextBoxFor(model => model.CleaningTimes, new { placeholder = "cepillado" })
                @Html.ValidationMessageFor(model => model.CleaningTimes)

                <h6>Usa o usó</h6>
                <label>
                    Chupón
                    @Html.CheckBoxFor(m => m.UsedPacifier, Model.UsedPacifier ? new { @checked = true } : null)
                    Biberón
                    @Html.CheckBoxFor(m => m.UsedBabyBottle, Model.UsedBabyBottle ? new { @checked = true } : null)
                    Se chupa el dedo
                    @Html.CheckBoxFor(m => m.Thumbsucking, Model.Thumbsucking ? new { @checked = true } : null)
                    Se muerde las uñas
                    @Html.CheckBoxFor(m => m.BitingNails, Model.BitingNails ? new { @checked = true } : null)
                </label>
                <h6>¿A que edad empezó y cuando lo dejó?</h6>
                @Html.TextBoxFor(model => model.HabitsDetails, new { placeholder = "tiempo" })
                @Html.ValidationMessageFor(model => model.HabitsDetails)

                <br><h6>¿Fue alimentado por seno materno?</h6>
                <label>
                    Si
                    @Html.RadioButtonFor(m => m.BreastFed, true, Model.BreastFed ? new { @checked = true } : null)
                    No
                    @Html.RadioButtonFor(m => m.BreastFed, false, !Model.BreastFed ? new { @checked = true } : null)
                </label>
                <br><h6>Tiempo</h6>
                @Html.TextBoxFor(model => model.BreastFedDetails, new { placeholder = "tiempo" })
                @Html.ValidationMessageFor(model => model.BreastFedDetails)

                <br> <h6>¿Su alimentación es?</h6>
                <label>
                    Blanda
                    @Html.RadioButtonFor(m => m.FeedingType, AwakenYourSmile.FeedingType.Soft, Model.FeedingType == AwakenYourSmile.FeedingType.Soft ? new { @checked = true } : null)
                    Fibrosa y dura
                    @Html.RadioButtonFor(m => m.FeedingType, AwakenYourSmile.FeedingType.HardFibrous, Model.FeedingType == AwakenYourSmile.FeedingType.HardFibrous ? new { @checked = true } : null)
                    Mixta
                    @Html.RadioButtonFor(m => m.FeedingType, AwakenYourSmile.FeedingType.Mixed, Model.FeedingType == AwakenYourSmile.FeedingType.Mixed ? new { @checked = true } : null)
                </label>

                <br>
                <h6>Cuadro de inmunizaciones</h6>
                @Html.TextBoxFor(model => model.ImmunizationsBox, new { placeholder = "inmunizaciones" })
                @Html.ValidationMessageFor(model => model.ImmunizationsBox)

                <h6>Habitación</h6>
                @Html.TextBoxFor(model => model.Room, new { placeholder = "Habitación" })
                @Html.ValidationMessageFor(model => model.Room)
                <div class="spanMessage"></div>
            </div>
            <div class="one_third column-last">
                <h3>Antecedentes médicos</h3>
                <br>  <h6>¿Tuvo problemas durante el embarazo o al nacer?</h6>
                <label>
                    Si
                    @Html.RadioButtonFor(m => m.PregnacyBirthProblems, true, Model.PregnacyBirthProblems ? new { @checked = true } : null)
                    No
                    @Html.RadioButtonFor(m => m.PregnacyBirthProblems, false, !Model.PregnacyBirthProblems ? new { @checked = true } : null)
                </label><br>
                <h6>¿Cuáles?</h6>
                @Html.TextBoxFor(model => model.PregnacyBirthProblemsDetails, new { placeholder = "otro" })
                @Html.ValidationMessageFor(model => model.PregnacyBirthProblemsDetails)
                <br>  <h6>¿La salud en general del niño es?</h6>
                <label>
                    Buena
                    @Html.RadioButtonFor(m => m.OverallHealth, AwakenYourSmile.Grade.Good, Model.OverallHealth == AwakenYourSmile.Grade.Good ? new { @checked = true } : null)
                    Regular
                    @Html.RadioButtonFor(m => m.OverallHealth, AwakenYourSmile.Grade.Regular, Model.OverallHealth == AwakenYourSmile.Grade.Regular ? new { @checked = true } : null)
                    Mala
                    @Html.RadioButtonFor(m => m.OverallHealth, AwakenYourSmile.Grade.Bad, Model.OverallHealth == AwakenYourSmile.Grade.Bad ? new { @checked = true } : null)
                </label><br>

                <br>  <h6>¿Es alérgico?</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.Allergic, false, !Model.Allergic ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.Allergic, true, Model.Allergic ? new { @checked = true } : null)
                </label><br>
                <h6>A</h6>
                @Html.TextBoxFor(model => model.AllergicDetails, new { placeholder = "alergia" })
                @Html.ValidationMessageFor(model => model.AllergicDetails)

                <br>  <h6>¿Ha tenido sangrado espontáneo por la nariz?</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.SpontaneousBleedingNose, false, !Model.SpontaneousBleedingNose ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.SpontaneousBleedingNose, true, Model.SpontaneousBleedingNose ? new { @checked = true } : null)
                </label><br>
                <h6>Fecha</h6>
                @Html.TextBoxFor(model => model.SpontaneousBleedingNoseDate, String.Format("{0:dd-MM-yyyy}", Model.SpontaneousBleedingNoseDate), new { placeholder = "fecha" })
                @Html.ValidationMessageFor(model => model.SpontaneousBleedingNoseDate)
                <h6>Causa</h6>
                @Html.TextBoxFor(model => model.SpontaneousBleedingNoseReason, new { placeholder = "causa" })
                @Html.ValidationMessageFor(model => model.SpontaneousBleedingNoseReason)

                <br>  <h6>¿Presenta moretones con facilidad?</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.Bruises, false, !Model.Bruises ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.Bruises, true, Model.Bruises ? new { @checked = true } : null)
                </label><br>
                <h6>Fecha</h6>
                @Html.TextBoxFor(model => model.BruisesDate, String.Format("{0:dd-MM-yyyy}", Model.BruisesDate), new { placeholder = "fecha" })
                @Html.ValidationMessageFor(model => model.BruisesDate)
                <h6>Causa</h6>
                @Html.TextBoxFor(model => model.BruisesReason, new { placeholder = "causa" })
                @Html.ValidationMessageFor(model => model.BruisesReason)

                <br>  <h6>¿Ha recibido transfusiones sanguíneas?</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.ReceivedBloodTransfusions, false, !Model.ReceivedBloodTransfusions ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.ReceivedBloodTransfusions, true, Model.ReceivedBloodTransfusions ? new { @checked = true } : null)
                </label><br>
                <h6>Fecha</h6>
                @Html.TextBoxFor(model => model.BloodTransfusionsDate, String.Format("{0:dd-MM-yyyy}", Model.SpontaneousBleedingNoseDate), new { placeholder = "fecha" })
                @Html.ValidationMessageFor(model => model.BloodTransfusionsDate)
                <h6>Causa</h6>
                @Html.TextBoxFor(model => model.BloodTransfusionsReason, new { placeholder = "causa" })
                @Html.ValidationMessageFor(model => model.BloodTransfusionsReason)

                <br>  <h6>¿Ha sido hospitalizado?</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.Hospitalized, false, !Model.Hospitalized ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.Hospitalized, true, Model.Hospitalized ? new { @checked = true } : null)
                </label><br>
                <h6>Fecha</h6>
                @Html.TextBoxFor(model => model.HospitalizedDate, String.Format("{0:dd-MM-yyyy}", Model.HospitalizedDate), new { placeholder = "fecha" })
                @Html.ValidationMessageFor(model => model.HospitalizedDate)
                <h6>Causa</h6>
                @Html.TextBoxFor(model => model.HospitalizedReason, new { placeholder = "causa" })
                @Html.ValidationMessageFor(model => model.HospitalizedReason)

                <br>  <h6>¿Ha sido medicado?</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.Medicated, false, !Model.Medicated ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.Medicated, true, Model.Medicated ? new { @checked = true } : null)
                </label><br>
                <h6>Fecha</h6>
                @Html.TextBoxFor(model => model.MedicatedDate, String.Format("{0:dd-MM-yyyy}", Model.MedicatedDate), new { placeholder = "fecha" })
                @Html.ValidationMessageFor(model => model.MedicatedDate)
                <h6>¿Cuál y por qué?</h6>
                @Html.TextBoxFor(model => model.MedicatedReason, new { placeholder = "cual" })
                @Html.ValidationMessageFor(model => model.MedicatedReason)

                <br>  <h6>¿Actualmente toma algún medicamento?</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.Prescribed, false, !Model.Prescribed ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.Prescribed, true, Model.Prescribed ? new { @checked = true } : null)
                </label><br>
                <h6>Fecha</h6>
                @Html.TextBoxFor(model => model.PrescribedDate, String.Format("{0:dd-MM-yyyy}", Model.PrescribedDate), new { placeholder = "fecha" })
                @Html.ValidationMessageFor(model => model.PrescribedDate)
                <h6>¿Cuál y por qué?</h6>
                @Html.TextBoxFor(model => model.PrescribedReason, new { placeholder = "cual" })
                @Html.ValidationMessageFor(model => model.PrescribedReason)

                <br>  <h6>¿Ha padecido o padece alguna de las siguientes enfermedades?</h6>
                <label>
                    Sarampión
                    @Html.CheckBoxFor(m => m.Measles, Model.Measles ? new { @checked = true } : null)
                    Asma
                    @Html.CheckBoxFor(m => m.Asthma, Model.Asthma ? new { @checked = true } : null)
                </label>
                <label>
                    Enfermedad renal
                    @Html.CheckBoxFor(m => m.RenalDisease, Model.RenalDisease ? new { @checked = true } : null)
                    Enfermedad del corazón
                    @Html.CheckBoxFor(m => m.HeartDisease, Model.HeartDisease ? new { @checked = true } : null)
                </label>
                <label>
                    Varicela
                    @Html.CheckBoxFor(m => m.ChickenPox, Model.ChickenPox ? new { @checked = true } : null)
                    Leucemia
                    @Html.CheckBoxFor(m => m.Leukemia, Model.Leukemia ? new { @checked = true } : null)
                </label>
                <label>
                    Anemia
                    @Html.CheckBoxFor(m => m.Anemia, Model.Anemia ? new { @checked = true } : null)
                    Diabetes
                    @Html.CheckBoxFor(m => m.Diabetes, Model.Diabetes ? new { @checked = true } : null)
                </label>
                <label>
                    Hepatitis
                    @Html.CheckBoxFor(m => m.Hepatitis, Model.Hepatitis ? new { @checked = true } : null)
                    Hemofilia
                    @Html.CheckBoxFor(m => m.Hemophilia, Model.Hemophilia ? new { @checked = true } : null)
                </label>
                <label>
                    VIH
                    @Html.CheckBoxFor(m => m.Hiv, Model.Hiv ? new { @checked = true } : null)
                    Epilepsia
                    @Html.CheckBoxFor(m => m.Epilepsy, Model.Epilepsy ? new { @checked = true } : null)
                </label>

                <h3>Antecedentes hereditarios</h3>
                <br><h6>¿El padre, la madre, abuelos o familiares cercanos presentan alguna enfermedad como: diabetes, hipertensión arterial sistémica, problemas del corazón, problemas de la sangre, retraso mental, labio o paladar hendido? Especifique ¿Cuál? y ¿Quién?</h6>
                @Html.TextBoxFor(model => model.Hereditaries, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.Hereditaries)
                <h3>Exploración intraoral</h3>
                <h5>Mucosas</h5>

                <br><h6>Frenillos</h6>
                @Html.TextBoxFor(model => model.IntraoralExaminationBraces, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.IntraoralExaminationBraces)

                <br><h6>Amigdalas</h6>
                @Html.TextBoxFor(model => model.IntraoralExaminationTonsils, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.IntraoralExaminationTonsils)

                <br><h6>Paladar duro</h6>
                @Html.TextBoxFor(model => model.IntraoralExaminationHardPalate, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.IntraoralExaminationHardPalate)
                <br><h6>Paladar blando</h6>
                @Html.TextBoxFor(model => model.IntraoralExaminationSoftPalate, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.IntraoralExaminationSoftPalate)

                <h4>Periodonto</h4>
                <h5>Oclusión</h5>
                <br><h6>Plano terminal<small> Derecho</small></h6>
                @Html.TextBoxFor(model => model.RightTerminalPlane, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.RightTerminalPlane)
                <br><h6><small> Izquierdo</small></h6>
                @Html.TextBoxFor(model => model.LeftTerminalPlane, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.LeftTerminalPlane)

                <br><h6>Clase molar<small> Derecho</small></h6>
                @Html.TextBoxFor(model => model.RightMolarClass, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.RightMolarClass)
                <br><h6><small> Izquierdo</small></h6>
                @Html.TextBoxFor(model => model.LeftMolarClass, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.LeftMolarClass)

                <br><h6>Clase canina<small> Derecho</small></h6>
                @Html.TextBoxFor(model => model.RightCanineClass, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.RightCanineClass)
                <br><h6><small> Izquierdo</small></h6>
                @Html.TextBoxFor(model => model.LeftCanineClass, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.LeftCanineClass)

                <br><h6>Overbite</h6>
                @Html.TextBoxFor(model => model.Overbite, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.Overbite)

                <br><h6>Overjet</h6>
                @Html.TextBoxFor(model => model.Overjet, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.Overjet)

                <br><h6>Forma de arco superior</h6>
                @Html.TextBoxFor(model => model.UpperArchShape, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.UpperArchShape)

                <br><h6>Forma de arco interior</h6>
                @Html.TextBoxFor(model => model.InnerArchShape, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.InnerArchShape)

                <br><h5>Hábitos</h5>
                @Html.TextBoxFor(model => model.Habits, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.Habits)
                <br>  <h6>Succión digital</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.FingerSucking, false, !Model.FingerSucking ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.FingerSucking, true, Model.FingerSucking ? new { @checked = true } : null)
                </label>
                <br><h6>Frecuencia</h6>
                @Html.TextBoxFor(model => model.FingerSuckingFrequency, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.FingerSuckingFrequency)
                <br><h6>Intensidadd</h6>
                @Html.TextBoxFor(model => model.FingerSuckingIntensity, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.FingerSuckingIntensity)
                <br><h6>Tiempo</h6>
                @Html.TextBoxFor(model => model.FingerSuckingTime, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.FingerSuckingTime)

                <br>  <h6>Deglución atípica</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.AtypicalSwallowing, false, !Model.AtypicalSwallowing ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.AtypicalSwallowing, true, Model.AtypicalSwallowing ? new { @checked = true } : null)
                </label>
                <br><h6>Frecuencia</h6>
                @Html.TextBoxFor(model => model.AtypicalSwallowingFrequency, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.AtypicalSwallowingFrequency)
                <br><h6>Intensidadd</h6>
                @Html.TextBoxFor(model => model.AtypicalSwallowingIntensity, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.AtypicalSwallowingIntensity)
                <br><h6>Tiempo</h6>
                @Html.TextBoxFor(model => model.AtypicalSwallowingTime, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.AtypicalSwallowingTime)

                <br>  <h6>Bruxismo</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.Bruxism, false, !Model.Bruxism ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.Bruxism, true, Model.Bruxism ? new { @checked = true } : null)
                </label>
                <br><h6>Frecuencia</h6>
                @Html.TextBoxFor(model => model.BruxismFrequency, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.BruxismFrequency)
                <br><h6>Intensidadd</h6>
                @Html.TextBoxFor(model => model.BruxismIntensity, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.BruxismIntensity)
                <br><h6>Tiempo</h6>
                @Html.TextBoxFor(model => model.BruxismTime, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.BruxismTime)

                <br>  <h6>Respiración oral</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.OralBreathing, false, !Model.OralBreathing ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.OralBreathing, true, Model.OralBreathing ? new { @checked = true } : null)
                </label>
                <br><h6>Frecuencia</h6>
                @Html.TextBoxFor(model => model.OralBreathingFrequency, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.OralBreathingFrequency)
                <br><h6>Intensidadd</h6>
                @Html.TextBoxFor(model => model.OralBreathingIntensity, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.OralBreathingIntensity)
                <br><h6>Tiempo</h6>
                @Html.TextBoxFor(model => model.OralBreathingTime, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.OralBreathingTime)

                <br>  <h6>Onicofagia</h6>
                <label>
                    No
                    @Html.RadioButtonFor(m => m.Onychophagia, false, !Model.Onychophagia ? new { @checked = true } : null)
                    Sí
                    @Html.RadioButtonFor(m => m.Onychophagia, true, Model.Onychophagia ? new { @checked = true } : null)
                </label>
                <br><h6>Frecuencia</h6>
                @Html.TextBoxFor(model => model.OnychophagiaFrequency, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.OnychophagiaFrequency)
                <br><h6>Intensidadd</h6>
                @Html.TextBoxFor(model => model.OnychophagiaIntensity, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.OnychophagiaIntensity)
                <br><h6>Tiempo</h6>
                @Html.TextBoxFor(model => model.OnychophagiaTime, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.OnychophagiaTime)

                <br>  <h6>Otros</h6>
                @Html.TextBoxFor(model => model.Others, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.Others)
                <br>  <h6>Anomalías dentales</h6>
                @Html.TextBoxFor(model => model.DentalAnomalies, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.DentalAnomalies)
                <br>  <h6>Hallazgos radiográficos</h6>
                @Html.TextBoxFor(model => model.RadiographicFindings, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.RadiographicFindings)
                <br>  <h6>Impresión diagnóstica y padecimiento actual</h6>
                @Html.TextBoxFor(model => model.DiagnosticImpressionCurrentCondition, new { placeholder = "hereditario" })
                @Html.ValidationMessageFor(model => model.DiagnosticImpressionCurrentCondition)

                <br>  <h6>Cooperación del paciente durante la exploración</h6>
                <label>
                    Cooperador
                    @Html.RadioButtonFor(m => m.PatientCooperationDuringScan, AwakenYourSmile.CooperationGrade.Cooperator, Model.PatientCooperationDuringScan == AwakenYourSmile.CooperationGrade.Cooperator ? new { @checked = true } : null)
                    Potencialmente cooperador
                    @Html.RadioButtonFor(m => m.PatientCooperationDuringScan, AwakenYourSmile.CooperationGrade.PartiallyCooperator, Model.PatientCooperationDuringScan == AwakenYourSmile.CooperationGrade.PartiallyCooperator ? new { @checked = true } : null)
                    No cooperador
                    @Html.RadioButtonFor(m => m.PatientCooperationDuringScan, AwakenYourSmile.CooperationGrade.NoCooperator, Model.PatientCooperationDuringScan == AwakenYourSmile.CooperationGrade.NoCooperator ? new { @checked = true } : null)
                </label>

                @Html.ValidationSummary()
                <input type="submit" value="Guardar" class="form-submit-button">
                <input type="button" value="Cancelar" class="form-submit-button" onclick='document.location.href("@Url.Action("Index")")'>
            </div>
        }
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/bundles/modernizr")
    @if (CultureInfo.CurrentUICulture.TwoLetterISOLanguageName == "es")
    {
        @Scripts.Render("~/Scripts/jquery-ui-datepicker-es.js");
        <script type="text/javascript">
            $(document).ready(function () {
                /* localizing calendar content to spanish language */
                $('#__birthDay').datepicker($.datepicker.regional["@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName"]);
            });
        </script>
    }

    <script type="text/javascript">
        $(document).ready(function () {
            var datefields = $("input[type='date']");

            if (!Modernizr.inputtypes.date) {
                datefields
                    .datepicker()
                    .each(function () {
                        // Turn ISO 8601 date string into US date string
                        var dateParts = this.value.split("-"),
                            date = $.map(dateParts, function (el) {
                                return !isNaN(parseInt(el, 10)) ? el : null;
                            }).length === 3
                                ? new Date(dateParts[0], dateParts[1], dateParts[2])
                                : null;
                        this.type = "text";
                        this.value = !date ? "" :
                       @if (CultureInfo.CurrentUICulture.TwoLetterISOLanguageName == "es")
                        {
                            @:date.getDate() + "/" + date.getMonth() + "/" + date.getFullYear();
}
                        else
                        {
                            @:date.getMonth() + "/" + date.getDate() + "/" + date.getFullYear();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                    });
            }
        });
    </script>
}
